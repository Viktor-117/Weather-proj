{"version":3,"file":"static/js/565.ee2d64d2.chunk.js","mappings":"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","sources":["pages/WeatherView/WetherView.styled.js","components/NowWeather/NowWeather.styled.js","components/WeatherCard/WeatherCard.styled.js","components/WeatherCard/WeatherCard.jsx","components/WeatherCard/selectImg.js","components/NowWeather/NowWeather.jsx","components/TodayWeather/TodayWeather.styled.js","components/TodayWeather/TodayWeather.jsx","components/ThreeDaysWeather/ThreeDaysWeather.styled.js","components/ThreeDaysWeather/ThreeDaysWeather.jsx","components/SevenDaysWeather/SevenDaysWeather.styled.js","components/SevenDaysWeather/SevenDaysWeather.jsx","components/WeatherTabs/WeatherTabs.styled.js","components/WeatherTabs/WeatherTabs.jsx","pages/WeatherView/WetherView.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nexport const Box = styled.div`\n  margin-top: 50px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-family: 'roboto';\n`;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 30px;\n  padding: 20px;\n  background-color: #e7ebf0;\n`;\n\nexport const Pic = styled.img`\n  display: block;\n  text-align: center;\n  margin-top: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  height: 120px;\n  width: 120px;\n`;\n","import Typography from '@mui/material/Typography';\nimport styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 30px;\n  padding: 20px;\n  background-color: #e7ebf0;\n`;\n\nexport const Pic = styled.img`\n  display: block;\n  text-align: center;\n  margin-top: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  height: 120px;\n  width: 120px;\n`;\n\nexport const Time = styled(Typography)`\n  text-align: center;\n  padding-top: 15px;\n`;\n","import Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport { Box, Pic, Time } from './WeatherCard.styled';\nimport selectimg from './selectImg';\n\nexport default function WeatherCard({ weatherInfo }) {\n  const {\n    temperature,\n    weathercode,\n    windspeed,\n    hour,\n    minTemperature,\n    maxTemperature,\n    date,\n  } = weatherInfo;\n\n  const img = selectimg(weathercode);\n\n  return (\n    <Box>\n      <Card sx={{ width: 240 }}>\n        <CardActionArea>\n          {hour && (\n            <Time gutterBottom variant=\"h5\" component=\"div\">\n              {hour}\n            </Time>\n          )}\n          {date && (\n            <Time gutterBottom variant=\"h5\" component=\"div\">\n              {date}\n            </Time>\n          )}\n\n          <Pic src={img} alt=\"\" height=\"100\" />\n          <CardContent>\n            {maxTemperature && (\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {`Max.temp.: ${Math.round(maxTemperature)} \\u{00B0}C`}\n              </Typography>\n            )}\n            {minTemperature && (\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {`Min.temp.: ${Math.round(minTemperature)} \\u{00B0}C`}\n              </Typography>\n            )}\n            {temperature && (\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {`Temp.: ${Math.round(temperature)} \\u{00B0}C`}\n              </Typography>\n            )}\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {`Wind speed: ${Math.round(windspeed)} km/h`}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Box>\n  );\n}\n","import clear from 'img/0.png';\nimport mianClear from 'img/1.png';\nimport partCloud from 'img/2.png';\nimport overcast from 'img/3.png';\nimport fog from 'img/45.png';\nimport rimeFog from 'img/48.png';\nimport drizzleLight from 'img/51.png';\nimport drizzleMid from 'img/53.png';\nimport drizzleDense from 'img/55.png';\nimport rainLight from 'img/61.png';\nimport rainMid from 'img/63.png';\nimport rainHeavy from 'img/65.png';\nimport snowSlight from 'img/71.png';\nimport snowMid from 'img/73.png';\nimport snowHeavy from 'img/75.png';\nimport showerSlight from 'img/80.png';\nimport showerMid from 'img/81.png';\nimport showerViolent from 'img/82.png';\nimport thunderstorm from 'img/95.png';\nimport snowGrains from 'img/77.png';\n\nexport default function selectimg(code) {\n  if (code === 0) {\n    return clear;\n  } else if (code === 1) {\n    return mianClear;\n  } else if (code === 2) {\n    return partCloud;\n  } else if (code === 3) {\n    return overcast;\n  } else if (code === 45) {\n    return fog;\n  } else if (code === 48) {\n    return rimeFog;\n  } else if (code === 51) {\n    return drizzleLight;\n  } else if (code === 53) {\n    return drizzleMid;\n  } else if (code === 55) {\n    return drizzleDense;\n  } else if (code === 61) {\n    return rainLight;\n  } else if (code === 63) {\n    return rainMid;\n  } else if (code === 65) {\n    return rainHeavy;\n  } else if (code === 71 || code === 85 || code === 86) {\n    return snowSlight;\n  } else if (code === 73) {\n    return snowMid;\n  } else if (code === 75) {\n    return snowHeavy;\n  } else if (code === 77) {\n    return snowGrains;\n  } else if (code === 80) {\n    return showerSlight;\n  } else if (code === 81) {\n    return showerMid;\n  } else if (code === 82) {\n    return showerViolent;\n  } else if (code === 95 || code === 96 || code === 99) {\n    return thunderstorm;\n  }\n}\n","import { useSelector } from 'react-redux';\nimport selectors from 'redux/selectors';\nimport { Box } from './NowWeather.styled';\nimport WeatherCard from 'components/WeatherCard';\n\nexport default function NowWeather() {\n  const { current_weather } = useSelector(selectors.getForecastData);\n\n  return (\n    <Box>\n      <WeatherCard weatherInfo={current_weather} />\n    </Box>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Box = styled.ul`\n  display: flex;\n  justify-content: center;\n  background-color: #e7ebf0;\n  margin-top: 30px;\n`;\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  padding: 20px;\n`;\n","import { useSelector } from 'react-redux';\nimport selectors from 'redux/selectors';\nimport { Box, Container } from './TodayWeather.styled';\nimport WeatherCard from 'components/WeatherCard';\n\nexport default function TodayWeather() {\n  const { hourly } = useSelector(selectors.getForecastData);\n\n  const time = [\n    '02.00',\n    '05.00',\n    '08.00',\n    '11.00',\n    '14.00',\n    '17.00',\n    '20.00',\n    '23.00',\n  ];\n  const getTodayArray = (oldArr, newArr) => {\n    for (let i = 2; i < 24; i += 3) {\n      newArr.push(oldArr[i]);\n    }\n  };\n  const temperature = [];\n  const weathercode = [];\n  const windspeed = [];\n\n  getTodayArray(hourly.temperature_2m, temperature);\n  getTodayArray(hourly.weathercode, weathercode);\n  getTodayArray(hourly.windspeed_10m, windspeed);\n\n  return (\n    <Box>\n      <Container>\n        {time.map((item, index) => {\n          return (\n            <WeatherCard\n              key={item}\n              weatherInfo={{\n                temperature: temperature[index],\n                weathercode: weathercode[index],\n                windspeed: windspeed[index],\n                hour: item,\n              }}\n            />\n          );\n        })}\n      </Container>\n    </Box>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Box = styled.ul`\n  display: flex;\n  justify-content: center;\n  background-color: #e7ebf0;\n  margin-top: 30px;\n`;\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  padding: 20px;\n`;\n","import { useSelector } from 'react-redux';\nimport selectors from 'redux/selectors';\nimport { Box, Container } from './ThreeDaysWeather.styled';\nimport WeatherCard from 'components/WeatherCard';\n\nexport default function ThreeDaysWeather() {\n  const { daily } = useSelector(selectors.getForecastData);\n  const {\n    time,\n    temperature_2m_max,\n    temperature_2m_min,\n    weathercode,\n    windspeed_10m_max,\n  } = daily;\n\n  const date = [];\n  time.map(day =>\n    date.push(new Date(day * 1000).toLocaleDateString('en-GB').substring(0, 5))\n  );\n  date.length = 3;\n\n  return (\n    <Box>\n      <Container>\n        {date.map((item, index) => {\n          return (\n            <WeatherCard\n              key={item}\n              weatherInfo={{\n                maxTemperature: temperature_2m_max[index],\n                minTemperature: temperature_2m_min[index],\n                weathercode: weathercode[index],\n                windspeed: windspeed_10m_max[index],\n                date: item,\n              }}\n            />\n          );\n        })}\n      </Container>\n    </Box>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Box = styled.ul`\n  display: flex;\n  justify-content: center;\n  background-color: #e7ebf0;\n  margin-top: 30px;\n`;\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  padding: 20px;\n`;\n","import { useSelector } from 'react-redux';\nimport selectors from 'redux/selectors';\nimport { Box, Container } from './SevenDaysWeather.styled';\nimport WeatherCard from 'components/WeatherCard';\n\nexport default function ThreeDaysWeather() {\n  const { daily } = useSelector(selectors.getForecastData);\n  const {\n    time,\n    temperature_2m_max,\n    temperature_2m_min,\n    weathercode,\n    windspeed_10m_max,\n  } = daily;\n\n  const date = [];\n  time.map(day =>\n    date.push(new Date(day * 1000).toLocaleDateString('en-GB').substring(0, 5))\n  );\n\n  return (\n    <Box>\n      <Container>\n        {date.map((item, index) => {\n          return (\n            <WeatherCard\n              key={item}\n              weatherInfo={{\n                maxTemperature: temperature_2m_max[index],\n                minTemperature: temperature_2m_min[index],\n                weathercode: weathercode[index],\n                windspeed: windspeed_10m_max[index],\n                date: item,\n              }}\n            />\n          );\n        })}\n      </Container>\n    </Box>\n  );\n}\n","import styled from 'styled-components';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nexport const Container = styled.div`\n  margin-top: 50px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-family: 'roboto';\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport selectors from 'redux/selectors';\nimport { setPeriod } from 'redux/citySlice';\nimport operations from 'redux/operations';\nimport NowWeather from 'components/NowWeather';\nimport TodayWeather from 'components/TodayWeather';\nimport ThreeDaysWeather from 'components/ThreeDaysWeather';\nimport SevenDaysWeather from 'components/SevenDaysWeather';\nimport { Title, Container } from './WeatherTabs.styled';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nexport default function WeatherTabs() {\n  const dispatch = useDispatch();\n  const { latitude, longitude, name, timezone } = useSelector(\n    selectors.getCity\n  );\n  const [value, setValue] = useState(0);\n  let period = useSelector(selectors.getPeriod);\n  const isLoading = useSelector(selectors.getIsLoading);\n  const loadCard = useSelector(selectors.getLoadCard);\n\n  const handleChange = (_, newValue) => {\n    setValue(newValue);\n\n    switch (newValue) {\n      case 0:\n        dispatch(operations.fetchCurrentWeather({ latitude, longitude }));\n        dispatch(setPeriod('now'));\n        break;\n      case 1:\n        dispatch(operations.fetchTodayWeather({ latitude, longitude }));\n        dispatch(setPeriod('today'));\n        break;\n\n      case 2:\n        dispatch(\n          operations.fetchDailyWeather({ latitude, longitude, timezone })\n        );\n        dispatch(setPeriod('3 days'));\n        break;\n\n      case 3:\n        dispatch(\n          operations.fetchDailyWeather({ latitude, longitude, timezone })\n        );\n        dispatch(setPeriod('7 days'));\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Container>\n      <Title>{name}</Title>\n      <Box sx={{ width: '100%', bgcolor: 'background.paper' }}>\n        <Tabs value={value} onChange={handleChange} centered>\n          <Tab label=\"Now\" />\n          <Tab label=\"Today\" />\n          <Tab label=\"3 Days\" />\n          <Tab label=\"7 Days\" />\n        </Tabs>\n      </Box>\n      {isLoading && <RotatingLines strokeColor=\"#3B8AD9\" />}\n      {period === 'now' && loadCard && <NowWeather />}\n      {period === 'today' && loadCard && <TodayWeather />}\n      {period === '3 days' && loadCard && <ThreeDaysWeather />}\n      {period === '7 days' && loadCard && <SevenDaysWeather />}\n    </Container>\n  );\n}\n","import { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RotatingLines } from 'react-loader-spinner';\nimport selectors from 'redux/selectors';\nimport { Box } from './WetherView.styled';\nimport WeatherTabs from 'components/WeatherTabs';\n\nexport default function WeatherView() {\n  const city = useSelector(selectors.getCity);\n  const isLoading = useSelector(selectors.getIsLoading);\n\n  return (\n    <Box>\n      {isLoading && <RotatingLines strokeColor=\"#3B8AD9\" />}\n      {!city.name ? <Navigate to=\"/\" /> : <WeatherTabs />}\n    </Box>\n  );\n}\n"],"names":["Box","styled","Pic","Time","Typography","WeatherCard","code","weatherInfo","temperature","weathercode","windspeed","hour","minTemperature","maxTemperature","date","img","clear","mianClear","partCloud","overcast","fog","rimeFog","drizzleLight","drizzleMid","drizzleDense","rainLight","rainMid","rainHeavy","snowSlight","snowMid","snowHeavy","snowGrains","showerSlight","showerMid","showerViolent","thunderstorm","Card","sx","width","CardActionArea","gutterBottom","variant","component","src","alt","height","CardContent","Math","round","color","NowWeather","current_weather","useSelector","selectors","Container","TodayWeather","hourly","getTodayArray","oldArr","newArr","i","push","temperature_2m","windspeed_10m","map","item","index","ThreeDaysWeather","daily","time","temperature_2m_max","temperature_2m_min","windspeed_10m_max","day","Date","toLocaleDateString","substring","length","Title","WeatherTabs","dispatch","useDispatch","latitude","longitude","name","timezone","useState","value","setValue","period","isLoading","loadCard","bgcolor","Tabs","onChange","_","newValue","operations","setPeriod","centered","Tab","label","strokeColor","WeatherView","city","to"],"sourceRoot":""}